@page "/"
@using CommunityToolkit.Maui.Storage
@using MeddyExplorerApp.Objects;
@layout StartupLayout
@inject IFolderPicker folderPicker
@inject MeddyExplorerSessionInfo meddyExplorerSessionInfo
@inject NavigationManager navManager

<MudButton OnClick="OpenFolderPicker" Variant="Variant.Filled">Create new Meddy project</MudButton>

@code
{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await CheckAndRequestStorageReadPermission();
    }

    public async Task<PermissionStatus> CheckAndRequestStorageReadPermission()
    {
        PermissionStatus status = await Permissions.CheckStatusAsync<Permissions.StorageRead>();

        if (status == PermissionStatus.Granted)
            return status;

        if (status == PermissionStatus.Denied && DeviceInfo.Platform == DevicePlatform.iOS)
        {
            // Prompt the user to turn on in settings
            // On iOS once a permission has been denied it may not be requested again from the application
            return status;
        }

        if (Permissions.ShouldShowRationale<Permissions.StorageRead>())
        {
            // Prompt the user with additional information as to why the permission is needed
        }

        status = await Permissions.RequestAsync<Permissions.StorageRead>();

        return status;
    }

    private async void OpenFolderPicker()
    {
        FolderPickerResult pickedFolder = await folderPicker.PickAsync(".", CancellationToken.None);

        if (pickedFolder.IsSuccessful)
        {
            meddyExplorerSessionInfo.RootDir = pickedFolder.Folder.Path;
            meddyExplorerSessionInfo.CurrentDir = meddyExplorerSessionInfo.RootDir;
            navManager.NavigateTo("/MeddyExplorer");
            return;
        }

        Console.WriteLine("Could not get a folder path from selection");
    }
}