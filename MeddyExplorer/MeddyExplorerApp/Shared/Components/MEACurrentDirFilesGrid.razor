<MudGrid Justify="@Justify.FlexStart">
    @foreach (FileSystemInfo file in Files)
    {
        <MudItem>
            <MudButton Class="mea-hover-transition-duration-none" OnClick="@((inMouseEventArgs) => OnFileSystemItemClicked(inMouseEventArgs, file))">
                <div class="d-flex flex-column align-center" style="width: 100px; max-height: 100px;">
                    <MudIcon Icon="@MELFileSystemFunctionLibrary.GetFileSystemInfoIcon(file)" Size="@Size.Large" />
                    <MudText Style="overflow-wrap: anywhere; overflow: hidden;" Typo="@Typo.body1" Align="@Align.Center">
                        @MELFileSystemFunctionLibrary.GetFileSystemInfoNameString(file)
                    </MudText>
                </div>
            </MudButton>
        </MudItem>
    }
</MudGrid>

@code
{
    [Parameter]
    public List<FileSystemInfo> Files { get; set; }
    [Parameter]
    public EventCallback<DirectoryInfo> OnFileSystemItemClickedDelegate { get; set; }

    protected void OnFileSystemItemClicked(MouseEventArgs inMouseEventArgs, FileSystemInfo inFileSystemItem)
    {
        FileInfo clickedFile = inFileSystemItem as FileInfo;
        if (clickedFile is not null)
        {
            // Process.Start
        }
        DirectoryInfo clickedDirectory = inFileSystemItem as DirectoryInfo;
        if (clickedDirectory is not null)
        {
            OnFileSystemItemClickedDelegate.InvokeAsync(clickedDirectory);
        }
    }
}
