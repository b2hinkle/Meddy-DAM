@using MeddyExplorerApp.Services;
@inject MeddyExplorerState meddyExplorerState
@implements IDisposable

<MudGrid Justify="@Justify.FlexStart">
    @foreach (FileSystemInfo file in meddyExplorerState.Files)
    {
        <MudItem>
            <MEAFileSystemItem FileSystemInfo="@file">
                <div class="d-flex flex-column align-center" style="width: 100px; max-height: 100px;">
                    <MudIcon Icon="@MELFileSystemFunctionLibrary.GetFileSystemInfoIcon(file)" Size="@Size.Large" />
                    <MudText Style="overflow-wrap: anywhere; overflow: hidden;" Typo="@Typo.body1" Align="@Align.Center">
                        @MELFileSystemFunctionLibrary.GetFileSystemInfoNameString(file)
                    </MudText>
                </div>
            </MEAFileSystemItem>
        </MudItem>
    }
</MudGrid>

@code
{
    protected override void OnInitialized()
    {
        meddyExplorerState.OnCurrentDirChangedDelegate += OnCurrentDirChange;
        meddyExplorerState.OnSelectedFilesChanged += OnSelectedFilesChanged;
    }

    public void OnCurrentDirChange(DirectoryInfo inOldCurrentDir, DirectoryInfo inNewCurrentDir)
    {
        StateHasChanged();
    }
    public void OnSelectedFilesChanged(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        meddyExplorerState.OnCurrentDirChangedDelegate -= OnCurrentDirChange;
        meddyExplorerState.OnSelectedFilesChanged -= OnSelectedFilesChanged;
    }
}
